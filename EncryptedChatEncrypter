import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.bind.DatatypeConverter;
import java.security.MessageDigest;
import java.util.Arrays;

import org.apache.commons.codec.binary.Base64;


public void setup() {
  size(800, 600, P2D);
  String password = "dang";
  String salt = "randomize this";
  
  //below here is kind of broken. Not sure why
  //byte[] hash = (salt + password).getBytes("UTF-8");
  //MessageDigest sha = MessageDigest.getInstance("SHA-1");
  //hash = sha.digest(hash);
  //hash = Arrays.copyOf(hash, 16);
  String key1 = "Bar12345Bar12345";
  
  String initVector = "RandomInitVector"; // 16 bytes IV
  System.out.println(decrypt(key1, initVector,
            encrypt(key1, initVector, "Hello World")));
}

public void draw() {    
  background(255);
  stroke(0, 10);
}

public static String encrypt(String key1, String initVector, String value) {
    try {
        IvParameterSpec iv = new IvParameterSpec(initVector.getBytes("UTF-8"));
        SecretKeySpec skeySpec = new SecretKeySpec(key1.getBytes("UTF-8"), "AES");

        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
        cipher.init(Cipher.ENCRYPT_MODE, skeySpec, iv);

        byte[] encrypted = cipher.doFinal(value.getBytes());
        System.out.println("encrypted string:" + DatatypeConverter.printBase64Binary(encrypted)); 
        //byte[] original = cipher.doFinal(DatatypeConverter.parseBase64Binary(encrypted.toString()));

        return DatatypeConverter.printBase64Binary(encrypted);
    } catch (Exception ex) {
        ex.printStackTrace();
    }

    return null;
}

public static String decrypt(String key1, String initVector, String encrypted) {
  key1 = "Bar12345Bar12341";
    try {
        IvParameterSpec iv = new IvParameterSpec(initVector.getBytes("UTF-8"));
        SecretKeySpec skeySpec = new SecretKeySpec(key1.getBytes("UTF-8"), "AES");

        Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
        cipher.init(Cipher.DECRYPT_MODE, skeySpec, iv);

        byte[] original = cipher.doFinal(DatatypeConverter.parseBase64Binary(encrypted));

        return new String(original);
    } 
    catch (javax.crypto.BadPaddingException e){
      println("Wrong key!");
      return "Try again with the correct key!";
      
    }    
    catch (Exception e) {
        e.printStackTrace();
    }

    return null;
}
